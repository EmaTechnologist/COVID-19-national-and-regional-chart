{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"graph_italy_from_excel","provenance":[{"file_id":"1Xnvh85_Ehi0lfcUQ0SRZFHqOTkS2qHnH","timestamp":1586613456417}],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyNAFV+ndWQOz25yApKglurf"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"yBzPjiqvjPtb","colab_type":"text"},"source":["DEVELOPED BY TUFARINI EMANUELE |\n","emanuele.tufarini@live.com |\n","3245606745\n","\n","If the notebook causes problems running it locally with Geany (or similar)"]},{"cell_type":"markdown","metadata":{"id":"tJRjvrGKZvAs","colab_type":"text"},"source":["IMPORTA IL FILE EXCEL"]},{"cell_type":"code","metadata":{"id":"ERsVUwKXaTuW","colab_type":"code","outputId":"568fbd0a-a2e1-490d-85f0-df292b499c80","executionInfo":{"status":"ok","timestamp":1587593491224,"user_tz":-120,"elapsed":9185,"user":{"displayName":"Emanuele T Scientist","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtriTAKEJMQa3IW-wQ9sDUPJVaGgfBlyFPr3TJqQ=s64","userId":"14142851168581534557"}},"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":91}},"source":["from google.colab import files\n","uploaded = files.upload()"],"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-dba5282c-874c-4164-9e5f-50b656f784ce\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-dba5282c-874c-4164-9e5f-50b656f784ce\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving cases_italy.xlsx to cases_italy (1).xlsx\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"BNbP04buaT76","colab_type":"text"},"source":["INSTALLA LE LIBRERIE"]},{"cell_type":"code","metadata":{"id":"fmS1jZDwZ0d6","colab_type":"code","outputId":"ce52d0ab-de9d-4815-d686-ba7d4a6f25da","executionInfo":{"status":"ok","timestamp":1587593504006,"user_tz":-120,"elapsed":11749,"user":{"displayName":"Emanuele T Scientist","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtriTAKEJMQa3IW-wQ9sDUPJVaGgfBlyFPr3TJqQ=s64","userId":"14142851168581534557"}},"colab":{"base_uri":"https://localhost:8080/","height":275}},"source":["!pip install matplotlib\n","!pip install COVID19Py\n","!pip install pandas\n","!pip install xlrd"],"execution_count":12,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (3.2.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib) (0.10.0)\n","Requirement already satisfied: numpy>=1.11 in /usr/local/lib/python3.6/dist-packages (from matplotlib) (1.18.2)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib) (2.8.1)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib) (2.4.7)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib) (1.2.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from cycler>=0.10->matplotlib) (1.12.0)\n","Requirement already satisfied: COVID19Py in /usr/local/lib/python3.6/dist-packages (0.3.0)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.6/dist-packages (1.0.3)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas) (2018.9)\n","Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.6/dist-packages (from pandas) (1.18.2)\n","Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.6/dist-packages (from pandas) (2.8.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.6.1->pandas) (1.12.0)\n","Requirement already satisfied: xlrd in /usr/local/lib/python3.6/dist-packages (1.1.0)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_gK7e3fxZ2po","colab_type":"text"},"source":["IMPORTA I MODULI"]},{"cell_type":"code","metadata":{"id":"ZgLKfGYzZ2zb","colab_type":"code","colab":{}},"source":["from matplotlib import pyplot as plt\n","import pandas as pd\n","import datetime\n","import csv\n","import os"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"n32Yw4n8I-i7","colab_type":"text"},"source":["IMPOSTA LA DATA"]},{"cell_type":"code","metadata":{"id":"FzrC2l4BI-0r","colab_type":"code","outputId":"bc8dbb36-9806-4bf7-db67-5eac94405952","executionInfo":{"status":"ok","timestamp":1587593508275,"user_tz":-120,"elapsed":470,"user":{"displayName":"Emanuele T Scientist","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtriTAKEJMQa3IW-wQ9sDUPJVaGgfBlyFPr3TJqQ=s64","userId":"14142851168581534557"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# +1 italy time zone > str( int (data.hour + 1))\n","data_day = datetime.datetime.now()\n","data_day = (str(data_day.year) + \"-\" + str(data_day.month) + \"-\" + \\\n","       str(data_day.day))\n","\n","print (data_day)"],"execution_count":15,"outputs":[{"output_type":"stream","text":["2020-4-22\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"RvIwxX9UZ3EH","colab_type":"text"},"source":["PROCESSA I CASI CONFERMATI"]},{"cell_type":"code","metadata":{"id":"3tAjpoYlZ3NL","colab_type":"code","colab":{}},"source":["# CASES\n","# \n","# \n","# https://data.europa.eu/euodp/en/data/dataset/covid-19-coronavirus-data\n","# /resource/55e8f966-d5c8-438e-85bc-c7a5a26f4863\n","# \n","# \n","\n","# insert info\n","info = 5\n","\n","# insert file name\n","name = r'cases_italy'\n","extension = '.xlsx'\n","read_file = pd.read_excel (name + extension)\n","name = name.lower()\n","\n","read_file.to_csv (name + '.csv', index = None, header=True)\n","# delete first line of csv\n","lines = open(name + '.csv', 'r').readlines()\n","del lines[0:4]\n","open(name + '.csv', 'w').writelines(lines)\n","\n","#\n","#\n","# process the csv\n","#\n","#\n","\n","name = 'cases_italy.csv'\n","\n","with open(name, 'r') as infile, open('new_' + name, 'w') as outfile:\n","  writer = csv.writer(outfile)\n","  newrow_list = [\"date\",\"confirmed\",]\n","  writer.writerow(newrow_list)\n","\n","################################################################################\n","\n","  reader = csv.reader(infile)\n","  for row in reader:\n","    newrow_list[0] = row[1]\n","    newrow_list[1] = row[info]\n","\n","    if row[info] == '':\n","      newrow_list[1] = '0'\n","\n","    writer.writerow(newrow_list)\n","  \n","    cases_italy = open ('cases_italy.txt','w')\n","    \n","    cases_italy.write(newrow_list[0])\n","  \n","#\n","#\n","# convert csv in txt - contains data\n","#\n","#\n","\n","csv_file = 'new_' + name\n","txt_file = 'data.txt'\n","with open(txt_file, \"w\") as my_output_file:\n","    with open(csv_file, \"r\") as my_input_file:\n","        [ my_output_file.write(\" \".join(row)+'\\n') \\\n","         for row in csv.reader(my_input_file)]\n","    my_output_file.close()\n","\n","with open('data.txt', 'r', encoding='utf-8') as inFile,\\\n","open('new_data.txt', 'w', encoding='utf-8') as outFile:\n","    for line in inFile:\n","        if line.strip():\n","            outFile.write(line)\n","            \n","lines = open('new_data' + '.txt', 'r').readlines()\n","open('new_data' + '.txt', 'w').writelines(lines)\n","\n","filein = open (\"new_data.txt\",\"r\")\n","\n","file_data = open (\"only_data.txt\",\"w\")\n","file_confirmed = open (\"only_confirmed.txt\",\"w\")\n","\n","for l in filein:\n","  data = (l[:10])\n","  file_data.write(data.strip() + \"\\n\")\n","      \n","  confirmed = (l[11:])\n","  file_confirmed.write(confirmed.strip() + \"\\n\")\n","\n","file_data.close()\n","file_confirmed.close()\n","\n","# delete the first line\n","with open(\"only_data.txt\", 'r') as fin:\n","  data = fin.read().splitlines(True)\n","with open(\"only_data.txt\", 'w') as fout:\n","  fout.writelines(data[1:])\n","\n","with open(\"only_confirmed.txt\", 'r') as fin:\n","  data = fin.read().splitlines(True)\n","with open(\"only_confirmed.txt\", 'w') as fout:\n","  fout.writelines(data[1:])\n","\n","List = open(\"only_confirmed.txt\").readlines()\n","List = [x.replace('\\n', '') for x in List]\n","\n","with open(\"only_confirmed.txt\", 'w') as fin:\n","\n","  for l in List:\n","    p = \") \"\n","    if p in l:\n","      fin.write(l[l.index(p)+2:] + \"\\n\")\n","    else:\n","      fin.write(l + \"\\n\")\n","  \n","List = open(\"only_confirmed.txt\").readlines()\n","List = [x.replace('\\n', '') for x in List]\n","List = [x.replace(',', '') for x in List] \n","List = [x.replace('–', '-') for x in List]  \n","# convert the elements in the list to int\n","\n","for i in range(0, len(List)): \n","  List[i] = int(List[i]) \n","    \n","List_data = open(\"only_data.txt\").readlines()\n","List_data = [x.replace('\\n', '') for x in List_data]\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EeW_XuHAc_sb","colab_type":"text"},"source":["GRAFICO DEI CASI CONFERMATI"]},{"cell_type":"code","metadata":{"id":"cR0eaXo4c_0D","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":296},"outputId":"779f843c-a960-4fab-c5a5-2b65ada445a8","executionInfo":{"status":"ok","timestamp":1587594154740,"user_tz":-120,"elapsed":612,"user":{"displayName":"Emanuele T Scientist","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtriTAKEJMQa3IW-wQ9sDUPJVaGgfBlyFPr3TJqQ=s64","userId":"14142851168581534557"}}},"source":["print (data_day)\n","\n","#\n","#\n","# graph by info\n","#\n","# \n","\n","plt.plot(List, label=\"confirmed to date\")\n","plt.ylabel(\"confirmed to date\")\n","plt.xlabel(\"days since 2020-02-21\")\n","plt.legend() \n","\n","plt.show()"],"execution_count":26,"outputs":[{"output_type":"stream","text":["2020-4-22\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"VkOrcPhiMp_L","colab_type":"text"},"source":["PROCESSA I DECESSI"]},{"cell_type":"code","metadata":{"id":"4c_7N136Mx-B","colab_type":"code","colab":{}},"source":["# DEATHS\n","# \n","# \n","# https://data.europa.eu/euodp/en/data/dataset/covid-19-coronavirus-data\n","# /resource/55e8f966-d5c8-438e-85bc-c7a5a26f4863\n","# \n","# \n","\n","# insert info\n","info = 6\n","\n","# insert file name\n","name = r'cases_italy'\n","extension = '.xlsx'\n","read_file = pd.read_excel (name + extension)\n","name = name.lower()\n","\n","\n","read_file.to_csv (name + '.csv', index = None, header=True)\n","# delete first line of csv\n","lines = open(name + '.csv', 'r').readlines()\n","del lines[0:4]\n","open(name + '.csv', 'w').writelines(lines)\n","\n","#\n","#\n","# process the csv\n","#\n","#\n","\n","name = 'cases_italy.csv'\n","\n","with open(name, 'r') as infile, open('new_' + name, 'w') as outfile:\n","\twriter = csv.writer(outfile)\n","\tnewrow_list = [\"date\",\"confirmed\",]\n","\twriter.writerow(newrow_list)\n","\n","################################################################################\n","\n","\treader = csv.reader(infile)\n","\tfor row in reader:\n","\t\tnewrow_list[0] = row[1]\n","\t\tnewrow_list[1] = row[info]\n","\n","\t\tif row[info] == '':\n","\t\t\tnewrow_list[1] = '0'\n","\n","\t\twriter.writerow(newrow_list)\n","\t\n","\t\tcases_italy = open ('cases_italy.txt','w')\n","\t\t\n","\t\tcases_italy.write(newrow_list[0])\n","  \n","#\n","#\n","# convert csv in txt - contains data\n","#\n","#\n","\n","csv_file = 'new_' + name\n","txt_file = 'data.txt'\n","with open(txt_file, \"w\") as my_output_file:\n","    with open(csv_file, \"r\") as my_input_file:\n","        [ my_output_file.write(\" \".join(row)+'\\n') \\\n","         for row in csv.reader(my_input_file)]\n","    my_output_file.close()\n","\n","with open('data.txt', 'r', encoding='utf-8') as inFile,\\\n","     open('new_data.txt', 'w', encoding='utf-8') as outFile:\n","    for line in inFile:\n","        if line.strip():\n","            outFile.write(line)\n","            \n","lines = open('new_data' + '.txt', 'r').readlines()\n","open('new_data' + '.txt', 'w').writelines(lines)\n","\n","filein = open (\"new_data.txt\",\"r\")\n","\n","file_data = open (\"only_data.txt\",\"w\")\n","file_confirmed = open (\"only_deaths.txt\",\"w\")\n","\n","for l in filein:\n","\tdata = (l[:10])\n","\tfile_data.write(data.strip() + \"\\n\")\n","\t\t\t\n","\tconfirmed = (l[11:])\n","\tfile_confirmed.write(confirmed.strip() + \"\\n\")\n","\n","file_data.close()\n","file_confirmed.close()\n","\n","# delete the first line\n","with open(\"only_data.txt\", 'r') as fin:\n","  data = fin.read().splitlines(True)\n","with open(\"only_data.txt\", 'w') as fout:\n","  fout.writelines(data[1:])\n","\n","\n","with open(\"only_deaths.txt\", 'r') as fin:\n","  data = fin.read().splitlines(True)\n","with open(\"only_deaths.txt\", 'w') as fout:\n","  fout.writelines(data[1:])\n","\n","List2 = open(\"only_deaths.txt\").readlines()\n","List2 = [x.replace('\\n', '') for x in List2]\n","\n","with open(\"only_deaths.txt\", 'w') as fin:\n","\n","\tfor l in List2:\n","\t\tp = \") \"\n","\t\tif p in l:\n","\t\t\tfin.write(l[l.index(p)+2:] + \"\\n\")\n","\t\telse:\n","\t\t\tfin.write(l + \"\\n\")\n","\t\n","List2 = open(\"only_deaths.txt\").readlines()\n","List2 = [x.replace('\\n', '') for x in List2]\n","List2 = [x.replace(',', '') for x in List2]\t\n","List2 = [x.replace('–', '-') for x in List2]\t\n","# convert the elements in the list to int\n","\n","for i in range(0, len(List)): \n","  List2[i] = int(List2[i]) \n","    \n","List_data = open(\"only_data.txt\").readlines()\n","List_data = [x.replace('\\n', '') for x in List_data]"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"c46rUb2YOmWn","colab_type":"text"},"source":["GRAFICO DEI DECESSI"]},{"cell_type":"code","metadata":{"id":"sQIMkMl0OmiE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":296},"outputId":"cfbf8045-88e1-4e1d-b6e6-981889b2c254","executionInfo":{"status":"ok","timestamp":1587594194877,"user_tz":-120,"elapsed":623,"user":{"displayName":"Emanuele T Scientist","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtriTAKEJMQa3IW-wQ9sDUPJVaGgfBlyFPr3TJqQ=s64","userId":"14142851168581534557"}}},"source":["print (data_day)\n","\n","#\n","#\n","# graph by info\n","#\n","# \n","\n","plt.plot(List2, label=\"fatalities to date\")\n","\n","plt.ylabel(\"fatalities to date\")\n","plt.xlabel(\"days since 2020-02-21\")\n","plt.legend() \n","\n","plt.show()"],"execution_count":28,"outputs":[{"output_type":"stream","text":["2020-4-22\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"gRhqDdnarXS_","colab_type":"text"},"source":["GRAFICO DEI CASI CONFERMATI E DEI DECESSI"]},{"cell_type":"code","metadata":{"id":"-IeNGa2urXfL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":296},"outputId":"63d6b9f5-114a-47c1-d5c6-439ca0f4498c","executionInfo":{"status":"ok","timestamp":1587594197365,"user_tz":-120,"elapsed":671,"user":{"displayName":"Emanuele T Scientist","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgtriTAKEJMQa3IW-wQ9sDUPJVaGgfBlyFPr3TJqQ=s64","userId":"14142851168581534557"}}},"source":["print (data_day)\n","\n","#\n","#\n","# graph by info\n","#\n","# \n","\n","plt.plot(List, label=\"confirmed to date\")\n","plt.plot(List2, label=\"fatalities to date\")\n","\n","plt.ylabel(\"fatalities to date\")\n","plt.xlabel(\"days since 2020-02-21\")\n","plt.legend() \n","\n","plt.show()"],"execution_count":29,"outputs":[{"output_type":"stream","text":["2020-4-22\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"VwJRhuCD-yx5","colab_type":"text"},"source":["CANCELLARE FILE NON NECESSARI"]},{"cell_type":"code","metadata":{"id":"FFM2io5y-2-5","colab_type":"code","colab":{}},"source":["os.remove('cases_italy.csv')\n","os.remove('new_cases_italy.csv')\n","os.remove('cases_italy.txt')\n","os.remove('data.txt')\n","os.remove('new_data.txt')"],"execution_count":0,"outputs":[]}]}